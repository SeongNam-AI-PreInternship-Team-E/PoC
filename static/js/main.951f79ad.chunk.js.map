{"version":3,"sources":["modules/days/days.ts","modules/times/teamtimes.ts","modules/times/times.ts","components/days/DayItem.tsx","components/days/SelectTime.js","lib/styles/palette.js","components/common/Button.js","components/days/DaysList.tsx","containers/DaysContainer.tsx","pages/DaysPage.tsx","pages/LoginPage.tsx","components/times/TimeIndex.tsx","components/times/TimeItem.tsx","components/times/TimesList.tsx","containers/TimesContainer.tsx","components/teamtimes/TeamTimeIndex.tsx","components/teamtimes/TeamTimeItem.tsx","components/teamtimes/TeamTimeList.tsx","containers/TeamTimesContainer.tsx","pages/TimePage.tsx","App.tsx","reportWebVitals.ts","modules/index.ts","index.tsx"],"names":["daysSlice","createSlice","name","initialState","Days","id","day","check","Availiable","start_hour","end_hour","reducers","addTodo","state","action","push","payload","console","log","setStartHour","setEndHour","toggleDays","days","find","actions","nextId","teamtimeSlice","addTeamDays","start_end","all_times","addTeamTimes","todo","set_time","addTeamAllTimes","time","arr","toggleTeamColor","colors","color","arrnum","select","timeSlice","addDays","addTimes","addAllTimes","toggleColor","PageWrapper","styled","div","BoxElement","DayItem","onToggle","onAddTodo","onAddDays","handleToggle","onClick","style","backgroundColor","background","SelectBlock","SelectTime","onSetEnd","onSetStart","options","value","label","onChange","e","number","Number","defaultValue","palette","gray","cyan","buttonStyle","css","props","fullWidth","StyledButton","button","StyledLink","Link","Button","to","WeekandBlock","DayItemBlock","DaysList","map","DaysContainer","useSelector","dispatch","times","useDispatch","DaysPage","LoginPage","Item","TimeIndex","onChangeColor","sep","indexofTime","useState","setColor","index","TimeBlock","li","TimeItem","timeSet","onAddTimes","onAddAllTimes","startTime","TimesBlock","DayBlock","TimesList","randArr","margin","TimesContainer","teamtimes","useCallback","start","end","i","getSeperateTime","onAddTeamAllTimes","useEffect","size","avalibaleTime","length","TeamTimeIndex","opacity","setOpacity","forEach","element","TeamTimeItem","onAddTeamTimes","teametimes","TeamTimeList","TeamTimesContainer","randomNum","Math","floor","random","getRandom","TimePage","App","component","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.951f79ad.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport type Days = {\n  id: number;\n  day: string;\n  check: boolean;\n};\nexport type Times = {\n  start_hour: string;\n  end_hour: string;\n};\n\nexport type DaysState = Days[];\nexport type TimesState = Times[];\n\nlet nextId = 1;\nconst initialState = {\n  Days: [\n    { id: 1, day: \"월요일\", check: false },\n    { id: 2, day: \"화요일\", check: false },\n    { id: 3, day: \"수요일\", check: false },\n    { id: 4, day: \"목요일\", check: false },\n    { id: 5, day: \"금요일\", check: false },\n    { id: 6, day: \"토요일\", check: false },\n    { id: 7, day: \"일요일\", check: false },\n  ],\n  Availiable: [0],\n  start_hour: 6,\n  end_hour: 24,\n};\n\nexport const daysSlice = createSlice({\n  name: \"days\",\n  initialState,\n  reducers: {\n    addTodo: (state, action: PayloadAction<number>) => {\n      state.Availiable.push(action.payload);\n      console.log(state);\n    },\n    setStartHour: (state, action: PayloadAction<number>) => {\n      state.start_hour = action.payload;\n    },\n    setEndHour: (state, action: PayloadAction<number>) => {\n      state.end_hour = action.payload;\n    },\n    // removeTodo: (state, action: PayloadAction<number>) => {\n    //   const todo = state.findIndex((todo) => todo.id === action.payload);\n    //   state.splice(todo, 1);\n    // },\n    toggleDays: (state, action: PayloadAction<number>) => {\n      const days = state.Days.find((day) => day.id === action.payload);\n      if (days) {\n        days.check = !days.check;\n      }\n    },\n  },\n});\n\nexport const { toggleDays, addTodo, setStartHour, setEndHour } =\n  daysSlice.actions;\n\nexport default daysSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport type TeamTimes = {\n  start: number;\n  end: number;\n};\n\nexport type SetTeamDays = {\n  id: number;\n  day: number;\n  start_end: Array<TeamTimes>;\n  all_times: Array<any>;\n};\n\nexport type DaysState = SetTeamDays[];\n\nlet nextId = 1;\nconst initialState: DaysState = [];\n\nexport const teamtimeSlice = createSlice({\n  name: \"teamdays\",\n  initialState,\n  reducers: {\n    addTeamDays: (state, action: PayloadAction<number>) => {\n      state.push({\n        id: nextId++,\n        day: action.payload,\n        start_end: [],\n        all_times: [],\n      });\n    },\n    addTeamTimes: (\n      state,\n      action: PayloadAction<{ id: number; set_time: TeamTimes }>\n    ) => {\n      const todo = state.find((todo) => todo.id === action.payload.id);\n      if (todo) {\n        todo.start_end.push(action.payload.set_time);\n      }\n    },\n    addTeamAllTimes: (\n      state,\n      action: PayloadAction<{ id: number; arr: any }>\n    ) => {\n      const time = state.find((time) => time.id === action.payload.id);\n      if (time) {\n        time.all_times.push(action.payload.arr);\n      }\n    },\n    toggleTeamColor: (\n      state,\n      action: PayloadAction<{ id: number; arrnum: number }>\n    ) => {\n      const colors = state.find((color) => color.id === action.payload.id);\n      if (colors) {\n        if ((colors.all_times[0][action.payload.arrnum].color = \"white\")) {\n          colors.all_times[0][action.payload.arrnum].color = \"#5465FF\";\n          colors.all_times[0][action.payload.arrnum].select =\n            !colors.all_times[0][action.payload.arrnum].select;\n        } else {\n          colors.all_times[0][action.payload.arrnum].color = \"white\";\n          colors.all_times[0][action.payload.arrnum].select =\n            !colors.all_times[0][action.payload.arrnum].select;\n        }\n      }\n    },\n  },\n});\n\nexport const { addTeamAllTimes, addTeamDays, addTeamTimes, toggleTeamColor } =\n  teamtimeSlice.actions;\n\nexport default teamtimeSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport type Times = {\n  start: number;\n  end: number;\n};\n\nexport type SetDays = {\n  id: number;\n  day: number;\n  start_end: Array<Times>;\n  all_times: Array<any>;\n};\n\nexport type DaysState = SetDays[];\n\nlet nextId = 1;\nconst initialState: DaysState = [];\n\nexport const timeSlice = createSlice({\n  name: \"days\",\n  initialState,\n  reducers: {\n    addDays: (state, action: PayloadAction<number>) => {\n      state.push({\n        id: nextId++,\n        day: action.payload,\n        start_end: [],\n        all_times: [],\n      });\n    },\n    addTimes: (\n      state,\n      action: PayloadAction<{ id: number; set_time: Times }>\n    ) => {\n      const todo = state.find((todo) => todo.id === action.payload.id);\n      if (todo) {\n        todo.start_end.push(action.payload.set_time);\n      }\n    },\n    addAllTimes: (state, action: PayloadAction<{ id: number; arr: any }>) => {\n      const time = state.find((time) => time.id === action.payload.id);\n      if (time) {\n        time.all_times.push(action.payload.arr);\n      }\n    },\n    toggleColor: (\n      state,\n      action: PayloadAction<{ id: number; arrnum: number }>\n    ) => {\n      const colors = state.find((color) => color.id === action.payload.id);\n      if (colors) {\n        if ((colors.all_times[0][action.payload.arrnum].color = \"white\")) {\n          colors.all_times[0][action.payload.arrnum].color = \"#5465FF\";\n          colors.all_times[0][action.payload.arrnum].select =\n            !colors.all_times[0][action.payload.arrnum].select;\n        } else {\n          colors.all_times[0][action.payload.arrnum].color = \"white\";\n          colors.all_times[0][action.payload.arrnum].select =\n            !colors.all_times[0][action.payload.arrnum].select;\n        }\n      }\n    },\n  },\n});\n\nexport const { addDays, addTimes, addAllTimes, toggleColor } =\n  timeSlice.actions;\n\nexport default timeSlice.reducer;\n","import React from \"react\";\nimport { Days } from \"../../modules/days/days\";\nimport styled from \"styled-components\";\ntype DayItemProps = {\n  day: Days;\n  onToggle: (id: number) => void;\n  onAddTodo: (id: number) => void;\n  onAddDays: (id: number) => void;\n};\n\nconst PageWrapper = styled.div`\n  margin-top: 100px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst BoxElement = styled.div`\n  margin-top: 2rem;\n  padding: 2rem;\n  display: flexbox;\n  border: 1px solid black;\n  border-radius: 1rem;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n`;\n\nfunction DayItem({ day, onToggle, onAddTodo, onAddDays }: DayItemProps) {\n  const handleToggle = () => {\n    onToggle(day.id);\n    onAddTodo(day.id);\n    onAddDays(day.id);\n  };\n\n  return (\n    <PageWrapper>\n      {day.check ? (\n        <BoxElement\n          onClick={handleToggle}\n          style={{ backgroundColor: \"#5465FF\" }}\n        >\n          {day.day}\n        </BoxElement>\n      ) : (\n        <BoxElement onClick={handleToggle} style={{ background: \"white\" }}>\n          {day.day}\n        </BoxElement>\n      )}\n    </PageWrapper>\n  );\n}\n\nexport default DayItem;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport styled from \"styled-components\";\nimport { setEndHour } from \"../../modules/days/days\";\nconst SelectBlock = styled.div`\n  flex-direction: column;\n  margin-top: 2rem;\n`;\nfunction SelectTime({ onSetEnd, onSetStart }) {\n  const options = [\n    { value: 1, label: 1 },\n    { value: 2, label: 2 },\n    { value: 3, label: 3 },\n    { value: 4, label: 4 },\n    { value: 5, label: 5 },\n    { value: 6, label: 6 },\n    { value: 7, label: 7 },\n    { value: 8, label: 8 },\n    { value: 9, label: 9 },\n    { value: 10, label: 10 },\n    { value: 11, label: 11 },\n    { value: 12, label: 12 },\n    { value: 13, label: 13 },\n    { value: 14, label: 14 },\n    { value: 15, label: 15 },\n    { value: 16, label: 16 },\n    { value: 17, label: 17 },\n    { value: 18, label: 18 },\n    { value: 19, label: 19 },\n    { value: 20, label: 20 },\n    { value: 21, label: 21 },\n    { value: 22, label: 22 },\n    { value: 23, label: 23 },\n    { value: 24, label: 24 },\n  ];\n  const SetEndHour = (e) => {\n    const number = Number(e.value);\n    onSetEnd(number);\n  };\n  const SetStartHour = (e) => {\n    const number = Number(e.value);\n    onSetStart(number);\n  };\n  return (\n    <div>\n      <SelectBlock>\n        <div>Start Hour : </div>\n        <Select\n          options={options}\n          onChange={SetStartHour}\n          defaultValue={6}\n        ></Select>\n      </SelectBlock>\n      <SelectBlock>\n        <div>End Hour : </div>\n        <Select options={options} onChange={SetEndHour} defaultValue={24} />\n      </SelectBlock>\n    </div>\n  );\n}\n\nexport default SelectTime;\n","// source: https://yeun.github.io/open-color/\n\nconst palette = {\n  gray: [\n    '#f8f9fa',\n    '#f1f3f5',\n    '#e9ecef',\n    '#dee2e6',\n    '#ced4da',\n    '#adb5bd',\n    '#868e96',\n    '#495057',\n    '#343a40',\n    '#212529',\n  ],\n  cyan: [\n    '#e3fafc',\n    '#c5f6fa',\n    '#99e9f2',\n    '#66d9e8',\n    '#3bc9db',\n    '#22b8cf',\n    '#15aabf',\n    '#1098ad',\n    '#0c8599',\n    '#0b7285',\n  ],\n};\n\nexport default palette;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport palette from \"../../lib/styles/palette\";\n\nconst buttonStyle = css`\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-weight: bold;\n  margin-top: 4rem;\n  padding: 0.25rem 1rem;\n  height: 2rem;\n  display: flex;\n  align-items: center;\n  align-content: center;\n  justify-content: center;\n  justify-self: center;\n  position: relative;\n  /* align-items: center;\n  align-content: center;\n  justify-content: center;\n  justify-self: center; */\n  color: white;\n  outline: none;\n  cursor: pointer;\n  background: ${palette.gray[8]};\n  &:hover {\n    background: ${palette.gray[6]};\n  }\n  ${(props) =>\n    props.fullWidth &&\n    css`\n      padding-top: 0.75rem;\n      padding-bottom: 0.75rem;\n      width: 100%;\n      font-size: 1.125rem;\n    `}\n  ${(props) =>\n    props.cyan &&\n    css`\n      background: ${palette.cyan[5]};\n\n      &:hover {\n        background: ${palette.cyan[4]};\n      }\n      @media (max-width: 768px) {\n        width: 100%;\n      }\n    `}\n    &:disabled {\n    background: ${palette.gray[3]};\n    color: ${palette.gray[5]};\n    cursor: not-allowed;\n  }\n`;\n\nconst StyledButton = styled.button`\n  ${buttonStyle}\n`;\n\nconst StyledLink = styled(Link)`\n  ${buttonStyle}\n`;\n\nconst Button = (props) => {\n  return props.to ? (\n    <StyledLink {...props} cyan={props.cyan ? 1 : 0} />\n  ) : (\n    <StyledButton {...props} />\n  );\n};\n\nexport default Button;\n","// @flow\nimport * as React from \"react\";\nimport { Days } from \"../../modules/days/days\";\nimport styled from \"styled-components\";\nimport DayItem from \"./DayItem\";\nimport SelectTime from \"./SelectTime\";\nimport Button from \"../common/Button\";\nconst WeekandBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\nconst DayItemBlock = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\ntype DaysProps = {\n  days: Days[];\n  onToggle: (id: number) => void;\n  onSetStart: (id: number) => void;\n  onSetEnd: (id: number) => void;\n  onAddTodo: (id: number) => void;\n  onAddDays: (id: number) => void;\n};\nexport const DaysList = ({\n  days,\n  onToggle,\n  onSetEnd,\n  onSetStart,\n  onAddTodo,\n  onAddDays,\n}: DaysProps) => {\n  return (\n    <>\n      <WeekandBlock>\n        <DayItemBlock>\n          {days.map((day) => (\n            <DayItem\n              key={day.id}\n              day={day}\n              onToggle={onToggle}\n              onAddTodo={onAddTodo}\n              onAddDays={onAddDays}\n            ></DayItem>\n          ))}\n        </DayItemBlock>\n        <div>\n          <SelectTime onSetEnd={onSetEnd} onSetStart={onSetStart}></SelectTime>\n        </div>\n        <Button to=\"/time\" cyan>\n          다음\n        </Button>\n      </WeekandBlock>\n    </>\n  );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import TodoInsert from \"../components/TodoInsert\";\n// import TodoList from \"../components/TodoList\";\nimport { RootState } from \"../modules\";\nimport {\n  toggleDays,\n  setStartHour,\n  setEndHour,\n  addTodo,\n} from \"../modules/days/days\";\nimport { addTeamDays } from \"../modules/times/teamtimes\";\nimport { addDays } from \"../modules/times/times\";\nimport { DaysList } from \"../components/days/DaysList\";\nfunction DaysContainer() {\n  const days = useSelector((state: RootState) => state.days);\n  const time = useSelector((state: RootState) => state.times);\n  const dispatch = useDispatch();\n  const onAddTodo = (id: number) => {\n    dispatch(addTodo(id));\n  };\n  const onToggle = (id: number) => {\n    dispatch(toggleDays(id));\n  };\n  const onSetStart = (id: number) => {\n    dispatch(setStartHour(id));\n  };\n  const onSetEnd = (id: number) => {\n    dispatch(setEndHour(id));\n  };\n\n  const onAddDays = (id: number) => {\n    dispatch(addDays(id));\n    dispatch(addTeamDays(id));\n  };\n\n  return (\n    <>\n      <DaysList\n        onToggle={onToggle}\n        onAddTodo={onAddTodo}\n        days={days.Days}\n        onSetEnd={onSetEnd}\n        onSetStart={onSetStart}\n        onAddDays={onAddDays}\n      ></DaysList>\n    </>\n  );\n}\n\nexport default DaysContainer;\n","// @flow\nimport React from \"react\";\nimport DaysContainer from \"../containers/DaysContainer\";\ntype Props = {};\nexport const DaysPage = (props: Props) => {\n  return <DaysContainer></DaysContainer>;\n};\n","// @flow\nimport * as React from \"react\";\ntype Props = {};\nexport const LoginPage = (props: Props) => {\n  return <div></div>;\n};\n","import styled from \"styled-components\";\nimport React, { useState } from \"react\";\nimport { setSourceMapRange } from \"typescript\";\nconst Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  border: 1px solid black;\n  text-align: center;\n  cursor: pointer;\n`;\n\ntype TimeIndexProps = {\n  onChangeColor: (id: number, arrnum: number) => void;\n  sep: any;\n  indexofTime: number;\n  time: any;\n};\n\nexport const TimeIndex = ({\n  onChangeColor,\n  sep,\n  indexofTime,\n  time,\n}: TimeIndexProps) => {\n  const [color, setColor] = useState(\"white\");\n  const onClick = () => {\n    if (color === \"white\") setColor(\"#5465FF\");\n    else setColor(\"white\");\n    onChangeColor(indexofTime, sep.index);\n  };\n  return (\n    <Item style={{ backgroundColor: `${color}` }} onClick={onClick}>\n      {sep.time}\n    </Item>\n  );\n};\n","import { createPublicKey } from \"crypto\";\nimport React, { useEffect } from \"react\";\n\nimport styled from \"styled-components\";\nimport { Days } from \"../../modules/days/days\";\nimport { SetDays } from \"../../modules/times/times\";\nimport { TimeIndex } from \"./TimeIndex\";\nconst PageWrapper = styled.div`\n  width: 5rem;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst TimeBlock = styled.li`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid black;\n  margin-left: 30px;\n`;\n\ntype TimeProps = {\n  time: SetDays;\n  onAddTimes: (id: number, start: number, end: number) => void;\n  onAddAllTimes: (id: number, arr: any) => void;\n  timeSet: any;\n  startTime: number;\n  onChangeColor: (id: number, arrnum: number) => void;\n  indexofTime: number;\n  randArr: any;\n};\n\nexport const TimeItem = ({\n  time,\n  onAddTimes,\n  timeSet,\n  onAddAllTimes,\n  startTime,\n  onChangeColor,\n  indexofTime,\n}: TimeProps) => {\n  return (\n    <PageWrapper>\n      <TimeBlock>\n        {timeSet.map((sep: any) => (\n          <TimeIndex\n            time={time}\n            key={sep.index}\n            onChangeColor={onChangeColor}\n            indexofTime={indexofTime}\n            sep={sep}\n          />\n        ))}\n      </TimeBlock>\n    </PageWrapper>\n  );\n};\n","// @flow\nimport React, { useEffect } from \"react\";\nimport { SetDays } from \"../../modules/times/times\";\nimport styled from \"styled-components\";\nimport { Days } from \"../../modules/days/days\";\nimport { TimeItem } from \"./TimeItem\";\nconst TimesBlock = styled.div``;\nconst DayBlock = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding-right: 2rem;\n`;\n\ntype TimesProps = {\n  times: SetDays[];\n  onAddTimes: (id: number, start: number, end: number) => void;\n  avalibaleTime: number;\n  timeSet: any;\n  startTime: number;\n  onAddAllTimes: (id: number, arr: any) => void;\n  onChangeColor: (id: number, arrnum: number) => void;\n  randArr: any;\n};\nexport const TimesList = ({\n  times,\n  onAddTimes,\n  timeSet,\n  startTime,\n  onAddAllTimes,\n  onChangeColor,\n  randArr,\n}: TimesProps) => {\n  return (\n    <>\n      <TimesBlock>\n        <h1 style={{ margin: \"2rem\" }}>나의 시간</h1>\n        <DayBlock>\n          {times.map((day) => (\n            <TimeItem\n              randArr={randArr}\n              indexofTime={day.id}\n              onChangeColor={onChangeColor}\n              key={day.id}\n              time={day}\n              onAddTimes={onAddTimes}\n              onAddAllTimes={onAddAllTimes}\n              timeSet={timeSet}\n              startTime={startTime}\n            ></TimeItem>\n          ))}\n        </DayBlock>\n      </TimesBlock>\n    </>\n  );\n};\n","import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import TodoInsert from \"../components/TodoInsert\";\n// import TodoList from \"../components/TodoList\";\nimport { RootState } from \"../modules\";\nimport type { Times } from \"../modules/times/times\";\nimport {\n  addDays,\n  addTimes,\n  addAllTimes,\n  toggleColor,\n} from \"../modules/times/times\";\nimport {\n  addTeamAllTimes,\n  addTeamTimes,\n  toggleTeamColor,\n} from \"../modules/times/teamtimes\";\nimport { TimesList } from \"../components/times/TimesList\";\nfunction TimesContainer() {\n  const days = useSelector((state: RootState) => state.days);\n  const times = useSelector((state: RootState) => state.times);\n  const team = useSelector((state: RootState) => state.teamtimes);\n  const dispatch = useDispatch();\n  const getSeperateTime = useCallback((start: number, end: number) => {\n    let arr = [];\n    let index = 0;\n    for (let i = start; i <= end; i += 0.5) {\n      arr.push({ time: i, color: \"white\", index, select: false });\n      index++;\n    }\n    return arr;\n  }, []);\n  const timeSet = getSeperateTime(days.start_hour, days.end_hour);\n  const onAddTimes = (id: number, start: number, end: number) => {\n    const set_time: Times = { start, end };\n    const number = { id, set_time };\n    dispatch(addTimes(number));\n    dispatch(addTeamTimes(number));\n  };\n  const onAddAllTimes = useCallback(\n    (id: number, arr: any) => {\n      dispatch(addAllTimes({ id, arr }));\n    },\n    [dispatch]\n  );\n  const onAddTeamAllTimes = useCallback(\n    (id: number, arr: any) => {\n      dispatch(addTeamAllTimes({ id, arr }));\n    },\n    [dispatch]\n  );\n  useEffect(() => {\n    for (let i = 0; i <= size; i++) {\n      onAddAllTimes(i, timeSet);\n      onAddTeamAllTimes(i, timeSet);\n    }\n  }, [onAddAllTimes]);\n  const onChangeColor = (id: number, arrnum: number) => {\n    dispatch(toggleTeamColor({ id, arrnum }));\n    dispatch(toggleColor({ id, arrnum }));\n  };\n\n  const avalibaleTime = days.end_hour - days.start_hour;\n  const size = times.length;\n\n  return (\n    <>\n      <TimesList\n        randArr={1}\n        times={times}\n        onAddTimes={onAddTimes}\n        onAddAllTimes={onAddAllTimes}\n        avalibaleTime={avalibaleTime}\n        timeSet={timeSet}\n        startTime={days.start_hour}\n        onChangeColor={onChangeColor}\n      ></TimesList>\n    </>\n  );\n}\n\nexport default TimesContainer;\n","import styled from \"styled-components\";\nimport React, { useState, useEffect } from \"react\";\nimport { setSourceMapRange } from \"typescript\";\nimport teamtimes from \"../../modules/times/teamtimes\";\nimport { stringify } from \"querystring\";\nconst Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  border: 1px solid black;\n  text-align: center;\n  cursor: pointer;\n`;\n\ntype TeamTimeIndexProps = {\n  onChangeColor: (id: number, arrnum: number) => void;\n  sep: any;\n  indexofTime: number;\n  time: any;\n  teamtimes: any;\n  randArr: any;\n};\n\nexport const TeamTimeIndex = ({\n  onChangeColor,\n  sep,\n  indexofTime,\n  time,\n  teamtimes,\n  randArr,\n}: TeamTimeIndexProps) => {\n  const [color, setColor] = useState(\"white\");\n  const [opacity, setOpacity] = useState(\"100%\");\n  useEffect(() => {\n    // let my_color = setColor(teamtimes[0].all_times[0][indexofTime].color);\n    randArr.forEach((element: number) => {\n      if (element === sep.index) {\n        onChangeColor(indexofTime, sep.index);\n      }\n    });\n    setColor(sep.color);\n  }, [sep.color]);\n  const onClick = () => {\n    if (color === \"white\") {\n      setColor(\"#5465FF\");\n      setOpacity(\"40%\");\n    } else {\n      setColor(\"white\");\n    }\n    onChangeColor(indexofTime, sep.index);\n  };\n\n  return (\n    <>\n      <Item\n        onClick={onClick}\n        style={{ opacity: `${opacity}`, backgroundColor: `${color}` }}\n      >\n        {sep.time}\n      </Item>\n    </>\n  );\n};\n","import { createPublicKey } from \"crypto\";\nimport React, { useEffect } from \"react\";\n\nimport styled from \"styled-components\";\nimport { Days } from \"../../modules/days/days\";\nimport { SetDays } from \"../../modules/times/times\";\nimport { TeamTimeIndex } from \"./TeamTimeIndex\";\nconst PageWrapper = styled.div`\n  width: 5rem;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst TimeBlock = styled.li`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid black;\n  margin-left: 30px;\n`;\n\ntype TimeProps = {\n  time: any[] | any;\n  onAddTeamTimes: (id: number, start: number, end: number) => void;\n  onAddTeamAllTimes: (id: number, arr: any) => void;\n  timeSet: any;\n  startTime: number;\n  onChangeColor: (id: number, arrnum: number) => void;\n  indexofTime: number;\n  teametimes: any;\n  randArr: any;\n};\n\nexport const TeamTimeItem = ({\n  time,\n  onAddTeamTimes,\n  timeSet,\n  onAddTeamAllTimes,\n  startTime,\n  onChangeColor,\n  indexofTime,\n  teametimes,\n  randArr,\n}: TimeProps) => {\n  return (\n    <PageWrapper>\n      {console.log(time.all_times)}\n      <TimeBlock>\n        {time.all_times[0]\n          ? time.all_times[0].map((sep: any) => (\n              <TeamTimeIndex\n                randArr={randArr}\n                time={time}\n                key={sep.index}\n                onChangeColor={onChangeColor}\n                indexofTime={indexofTime}\n                sep={sep}\n                teamtimes={teametimes}\n              />\n            ))\n          : null}\n      </TimeBlock>\n    </PageWrapper>\n  );\n};\n","// @flow\nimport React, { useEffect } from \"react\";\nimport { SetDays } from \"../../modules/times/times\";\nimport styled from \"styled-components\";\nimport { Days } from \"../../modules/days/days\";\nimport { TeamTimeItem } from \"./TeamTimeItem\";\nconst TimesBlock = styled.div``;\nconst DayBlock = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding-right: 2rem;\n`;\n\ntype TimesProps = {\n  times: any;\n  onAddTeamTimes: (id: number, start: number, end: number) => void;\n  avalibaleTime: number;\n  timeSet: any;\n  startTime: number;\n  onAddTeamAllTimes: (id: number, arr: any) => void;\n  onChangeColor: (id: number, arrnum: number) => void;\n  teamtimes: any;\n  randArr: any;\n};\nexport const TeamTimeList = ({\n  times,\n  onAddTeamTimes,\n  timeSet,\n  startTime,\n  onAddTeamAllTimes,\n  onChangeColor,\n  teamtimes,\n  randArr,\n}: TimesProps) => {\n  return (\n    <>\n      <TimesBlock>\n        <h1 style={{ margin: \"2rem\" }}>팀원 시간</h1>\n\n        <DayBlock>\n          {times.map((day: any) => (\n            <TeamTimeItem\n              randArr={randArr}\n              teametimes={teamtimes}\n              indexofTime={day.id}\n              onChangeColor={onChangeColor}\n              key={day.id}\n              time={day}\n              onAddTeamTimes={onAddTeamTimes}\n              onAddTeamAllTimes={onAddTeamAllTimes}\n              timeSet={timeSet}\n              startTime={startTime}\n            ></TeamTimeItem>\n          ))}\n        </DayBlock>\n      </TimesBlock>\n    </>\n  );\n};\n","import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import TodoInsert from \"../components/TodoInsert\";\n// import TodoList from \"../components/TodoList\";\nimport { RootState } from \"../modules\";\nimport type { Times } from \"../modules/times/times\";\n\nimport {\n  addTeamAllTimes,\n  addTeamTimes,\n  toggleTeamColor,\n} from \"../modules/times/teamtimes\";\nimport { TeamTimeList } from \"../components/teamtimes/TeamTimeList\";\nfunction TeamTimesContainer() {\n  const days = useSelector((state: RootState) => state.days);\n  const times = useSelector((state: RootState) => state.times);\n  const teamtimes = useSelector((state: RootState) => state.teamtimes);\n  const dispatch = useDispatch();\n  const getSeperateTime = useCallback((start: number, end: number) => {\n    let arr = [];\n    let index = 0;\n    for (let i = start; i <= end; i += 0.5) {\n      arr.push({ time: i, color: \"white\", index, select: false });\n      index++;\n    }\n    return arr;\n  }, []);\n  const onAddTeamAllTimes = useCallback(\n    (id: number, arr: any) => {\n      dispatch(addTeamAllTimes({ id, arr }));\n    },\n    [dispatch]\n  );\n  useEffect(() => {\n    for (let i = 0; i <= size; i++) {\n      onAddTeamAllTimes(i, timeSet);\n    }\n  }, [onAddTeamAllTimes]);\n\n  const onChangeColor = (id: number, arrnum: number) => {\n    dispatch(toggleTeamColor({ id, arrnum }));\n  };\n\n  const onAddTeamTimes = (id: number, start: number, end: number) => {\n    const set_time: Times = { start, end };\n    const number = { id, set_time };\n    dispatch(addTeamTimes(number));\n  };\n\n  const timeSet = getSeperateTime(days.start_hour, days.end_hour);\n  const avalibaleTime = days.end_hour - days.start_hour;\n  console.log(avalibaleTime * 2);\n  const size = times.length;\n  const getRandom = useCallback(() => {\n    const randomNum = Math.floor(Math.random() * avalibaleTime + 1);\n    let arr = [];\n    for (let i = 0; i < randomNum; i++) {\n      arr.push(Math.floor(Math.random() * avalibaleTime * 2));\n    }\n    return arr;\n  }, [avalibaleTime]);\n  const randArr = getRandom();\n  return (\n    <>\n      <TeamTimeList\n        randArr={randArr}\n        times={times}\n        onAddTeamTimes={onAddTeamTimes}\n        onAddTeamAllTimes={onAddTeamAllTimes}\n        avalibaleTime={avalibaleTime}\n        timeSet={timeSet}\n        startTime={days.start_hour}\n        onChangeColor={onChangeColor}\n        teamtimes={teamtimes}\n      ></TeamTimeList>\n    </>\n  );\n}\n\nexport default TeamTimesContainer;\n","// @flow\nimport * as React from \"react\";\nimport TimesContainer from \"../containers/TimesContainer\";\nimport TeamTimesContainer from \"../containers/TeamTimesContainer\";\ntype Props = {};\nexport const TimePage = (props: Props) => {\n  return (\n    <>\n      <TimesContainer></TimesContainer>\n      <TeamTimesContainer></TeamTimesContainer>\n    </>\n  );\n};\n","import { Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { DaysPage } from \"./pages/DaysPage\";\nimport { LoginPage } from \"./pages/LoginPage\";\nimport { TimePage } from \"./pages/TimePage\";\nfunction App() {\n  return (\n    <>\n      <Route component={DaysPage} path={\"/\"} exact />\n      <Route component={LoginPage} path={\"/login\"} />\n      <Route component={TimePage} path={\"/time\"} />\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport days from \"./days/days\";\nimport times from \"./times/times\";\nimport teamtimes from \"./times/teamtimes\";\nconst rootReducer = combineReducers({ days, times, teamtimes });\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./modules\";\nimport { HashRouter, BrowserRouter } from \"react-router-dom\";\nimport { composeWithDevTools } from \"redux-devtools-extension\"; // 리덕스 개발자 도구\n\nconst store = createStore(rootReducer, composeWithDevTools()); // 스토어를 만듭니다.\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}